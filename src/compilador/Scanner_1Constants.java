/* Generated By:JavaCC: Do not edit this line. Scanner_1Constants.java */
package compilador;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Scanner_1Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTAIRE = 5;
  /** RegularExpression Id. */
  int COMENTAIRES = 6;
  /** RegularExpression Id. */
  int COM = 7;
  /** RegularExpression Id. */
  int POINTS = 8;
  /** RegularExpression Id. */
  int COMMA = 9;
  /** RegularExpression Id. */
  int LBR = 10;
  /** RegularExpression Id. */
  int RBR = 11;
  /** RegularExpression Id. */
  int SEMIC = 12;
  /** RegularExpression Id. */
  int ASSIGN = 13;
  /** RegularExpression Id. */
  int Relation = 14;
  /** RegularExpression Id. */
  int OPENACCOLADE = 15;
  /** RegularExpression Id. */
  int CLOSEDACCOLADE = 16;
  /** RegularExpression Id. */
  int Equal = 17;
  /** RegularExpression Id. */
  int Diffrent = 18;
  /** RegularExpression Id. */
  int Comp = 19;
  /** RegularExpression Id. */
  int APOSTROPHE = 20;
  /** RegularExpression Id. */
  int PLUS_SIGN = 21;
  /** RegularExpression Id. */
  int MINUS_SIGN = 22;
  /** RegularExpression Id. */
  int MULT_SIGN = 23;
  /** RegularExpression Id. */
  int DIV_SIGN = 24;
  /** RegularExpression Id. */
  int CHOIX = 25;
  /** RegularExpression Id. */
  int AND = 26;
  /** RegularExpression Id. */
  int THEN = 27;
  /** RegularExpression Id. */
  int DEBUT = 28;
  /** RegularExpression Id. */
  int IF = 29;
  /** RegularExpression Id. */
  int INTERFACE = 30;
  /** RegularExpression Id. */
  int INIT = 31;
  /** RegularExpression Id. */
  int ACTIONS = 32;
  /** RegularExpression Id. */
  int COMPOSANT = 33;
  /** RegularExpression Id. */
  int PROP = 34;
  /** RegularExpression Id. */
  int EVT = 35;
  /** RegularExpression Id. */
  int INV = 36;
  /** RegularExpression Id. */
  int FIN = 37;
  /** RegularExpression Id. */
  int Int = 38;
  /** RegularExpression Id. */
  int Bool = 39;
  /** RegularExpression Id. */
  int String = 40;
  /** RegularExpression Id. */
  int Char = 41;
  /** RegularExpression Id. */
  int TypeCompo = 42;
  /** RegularExpression Id. */
  int Type1 = 43;
  /** RegularExpression Id. */
  int Type2Fen = 44;
  /** RegularExpression Id. */
  int LOGIC_CONSTANT = 45;
  /** RegularExpression Id. */
  int NUMBER = 46;
  /** RegularExpression Id. */
  int IDLIB = 47;
  /** RegularExpression Id. */
  int LETTER = 48;
  /** RegularExpression Id. */
  int DIGIT = 49;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<COMENTAIRE>",
    "<COMENTAIRES>",
    "<COM>",
    "\":\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\":=\"",
    "\"::\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\"<>\"",
    "<Comp>",
    "\"\\\'\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"~\"",
    "<AND>",
    "<THEN>",
    "<DEBUT>",
    "<IF>",
    "<INTERFACE>",
    "<INIT>",
    "<ACTIONS>",
    "\"COMP\"",
    "\"PROP\"",
    "<EVT>",
    "\"INV\"",
    "\"FIN\"",
    "<Int>",
    "<Bool>",
    "<String>",
    "<Char>",
    "<TypeCompo>",
    "<Type1>",
    "<Type2Fen>",
    "<LOGIC_CONSTANT>",
    "<NUMBER>",
    "<IDLIB>",
    "<LETTER>",
    "<DIGIT>",
  };

}
